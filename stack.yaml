AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  paracord-backend
  oh how beautiful it could be. oh how beautiful it will be.
Globals:
  Function:
    Timeout: 3

Resources:
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Retain
    BucketPolicy:
      Type: 'AWS::S3::BucketPolicy'
      Properties:
        PolicyDocument:
          Id: Paracord
          Version: 2012-10-17
          Statement:
            - Sid: PublicReadForGetBucketObjects
              Effect: Allow
              Principal: '*'
              Action: 's3:GetObject'
              Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /*
        Bucket: !Ref S3Bucket

  Enclave: # this can be a user, spine, or key enclave
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Enclaves
      AttributeDefinitions:
        - AttributeName: id #either user name or id from user link
          AttributeType: S
        - AttributeName: sigblock # oldsignable::oldsignature::nextsignable
          AttributeType: S
        - AttributeName: type #prevents injection of false messages, Are you a user(0), a spine(1), a key(2)?
          AttributeType: N
        - AttributeName: body #encrypted data
          AttributeType: B
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  Shard: # self destructing message
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Shards
      AttributeDefinitions:
        - AttributeName: id #either user name or id from user link
          AttributeType: S
        - AttributeName: id_attach # channel id to link to TODO: this is sort of a problem, you can see who was talking to who, and extrapolate when from the burn, you can still reverse this by making this a normal ID though
          AttributeType: S
        - AttributeName: sigblock # oldsignable::oldsignature::nextsignable
          AttributeType: S
        - AttributeName: order # which post this is ordered as(this replaces date)
            AttributeType: N
        - AttributeName: body #encrypted payload
          AttributeType: B
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: order
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: burn_at #expire date as unix timestamp
        Enabled: true
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  ParacordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: app/
      Handler: app.handler
      Runtime: python3.10
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              !Ref Enclaves
        - DynamoDBCrudPolicy:
            TableName:
              !Ref Shards
      Events:
        getEnclave:
          Type: Api
          Properties:
            Path: /Enclave/{enclave_id}/
            Method: get
        uploadEnclave:
          Type: Api #returns ID of thingy you just created
          Properties:
            Path: /Enclave
            Method: post
        updateEnclave:
          Type: Api # requires signature identification
          Properties:
            Path: /Enclave/{enclave_id}/
            Method: patch
        deleteEnclave:
          Type: Api # requires signature identification
          Properties:
            Path: /Enclave/{enclave_id}/
            Method: delete
        uploadShard:
          Type: Api #returns ID of thingy you just created
          Properties:
            Path: /Shard/{shard_id}/
            Method: post
        updateShard:
          Type: Api # updates item if you can successfully sign a garbage string
          Properties: 
            Path: /Shard/{shard_id}/
            Method: patch
        deleteShard:
          Type: Api # deletes item if you can successfully sign a garbage string
          Properties: 
            Path: /Shard/{shard_id}/
            Method: delete
        getShards:
          Type: Api # gets all shards connected to an ID
          Properties: 
            Path: /Shards/{channel_id}/
            Method: get

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ParacordApi:
    Description: "API Gateway endpoint URL for Prod stage for Paracord"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  Paracord:
    Description: "Paracord Lambda Function ARN"
    Value: !GetAtt ParacordFunction.Arn
  ParacordLambdaIamRole:
    Description: "Implicit IAM Role created for Paracord Lambda"
    Value: !GetAtt ParacordLambdaFunctionRole.Arn
